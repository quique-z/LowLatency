{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "networkName": {
      "type": "string",
      "defaultValue": "lowlatency-vnet",
      "metadata": {
        "description": "The vNet"
      }
    },
    "addressPrefixes": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The vNET prefix"
      }
    },
    "Subnet1Name": {
      "type": "string",
      "defaultValue": "subnet1",
      "metadata": {
        "description": "The subnet name"
      }
    },
    "Subnet1Prefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "The subnet"
      }
    },
    "adminUsername": {
      "defaultValue": "msadmin",
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "imagePublisher": {
      "defaultValue": "RedHat",
      "type": "string",
      "metadata": {
        "description": "Image Publisher for the virtual machines"
      }
    },   
    "offer": {
      "defaultValue": "RHEL",
      "type": "string",
      "metadata": {
        "description": "Offer for the virtual machines"
      }
    }, 
    "sku": {
      "defaultValue": "7-RAW-CI",
      "type": "string",
      "metadata": {
        "description": "SKU for the virtual machines"
      }
    }, 
    "version": {
      "defaultValue": "latest",
      "type": "string",
      "metadata": {
        "description": "Version for the virtual machines"
      }
    }, 
    "proximityPlacementGroup": {
      "defaultValue": "Yes",
      "type": "string",
      "allowedValues": [
                "Yes",
                "No"
            ],
      "metadata": {
        "description": "Will the VMs be placed in a PPG"
      }
    },   
    "acceleratedNetworking": {
      "defaultValue": "Yes",
      "type": "string",
      "allowedValues": [
                "Yes",
                "No"
            ],
      "metadata": {
        "description": "Will the VMs have accelerated networking enabled"
      }
    },                                  
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "metadata": {
        "description": "Virtual Machine Size"
      }
    }    
  },
  "variables": {
    "deploymentConfig": {
      "apiVersions": {
        "nicApiVersion": "2017-06-01",
        "deploymentApiVersion": "2018-05-01",
        "vmApiVersion": "2018-06-01",
        "publicIpApiVersion": "2017-11-01",
        "nsgApiVersion": "2018-11-01",
        "vnetApiVersion": "2016-03-30",
        "vmExtensionApiVersion": "2015-06-15",
        "subnetApiVersion": "2017-10-01",
        "applicationGwApiVersion": "2017-10-01",
        "availabilitySetApiVersion": "2017-03-30",
        "loadBalancerApiVersion": "2018-02-01",
        "storageApiVersion": "2018-07-01",
        "ppgApiVersion": "2018-04-01"
      }
    },
    "vmConfig": {
      "serverNicIP": "10.0.0.4",
      "clientNicIP": "10.0.0.5",
      "serverName": "server",
      "clientName": "client",
      "imageInfo": {
        "imagePublisher": "[parameters('imagePublisher')]",
        "offer": "[parameters('offer')]",
        "sku": "[parameters('sku')]",
        "version": "[parameters('version')]"
      }
    },
    "ppgName": "[concat('ppg',uniquestring(resourceGroup().id))]",
    "storageAccountName": "[concat('diag',uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks',parameters('networkName')), '/subnets/',parameters('Subnet1Name'))]",
    "cloud-config": "#cloud-config\n\n",
    "repoupgrade": "apt_update: false\napt_upgrade: false\n",
    "managedEtcHosts": "\nmanage_etc_hosts: true",
    "installiPerf": "\n- sudo wget https://iperf.fr/download/fedora/iperf3-3.1.3-1.fc24.x86_64.rpm\n- sudo rpm -i *.rpm",
    "installNc": "\n- sudo yum install nc -y",
    "configFirewall": "\n- sudo firewall-offline-cmd -p 5201:tcp\n- sudo kill -HUP firewalld",
    "createDirs": "\n- sudo mkdir /opt/tools",
    "downloadIngestTool": "\n- cd /opt/tools\n- sudo wget https://stageb15002ab66154dae8e2.blob.core.windows.net/lowlatency/ingestapp/publish.zip",
    "downloadperfScript": "\n- sudo wget https://stageb15002ab66154dae8e2.blob.core.windows.net/lowlatency/script/perfScript.sh\n- sudo chmod 755 /opt/tools/perfScript.sh",
    "unzipIngestTool": "\n- sudo unzip -d /opt/tools publish.zip\n- sudo chmod 755 /opt/tools/publish/ReadIperf",
    "runTool": "\n- sudo ./perfScript.sh 10.0.0.4 5201 /opt/tools/output.json",
    "runCmd": "[concat('\nruncmd:',variables('installiPerf'),variables('installNc'),variables('configFirewall'),variables('createDirs'),variables('downloadIngestTool'),variables('downloadperfScript'),variables('unzipIngestTool'),variables('runTool'))]",
    "customData": "[concat(variables('cloud-config'), variables('repoupgrade'),variables('managedEtcHosts'),variables('runCmd'))]"
  },
  "resources": [
    {
      "condition": "[equals(parameters('proximityPlacementGroup'), 'Yes')]",
      "apiVersion": "[variables('deploymentConfig').apiVersions.ppgApiVersion]",
      "type": "Microsoft.Compute/proximityPlacementGroups",
      "name": "[variables('ppgName')]",
      "location": "[resourceGroup().location]"
    },
    {
      "name": "[parameters('networkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('deploymentConfig').apiVersions.vnetApiVersion]",
      "dependsOn": [],
      "tags": {
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefixes')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('Subnet1Name')]",
            "properties": {
              "addressPrefix": "[parameters('Subnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('deploymentConfig').apiVersions.nicApiVersion]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "serverNic",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/',parameters('networkName'))]"
      ],
      "properties": {
        "primary": true,
        "enableAcceleratedNetworking": "[if(equals(parameters('acceleratedNetworking'), 'Yes'), 'true', 'false')]",
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('vmconfig').serverNicIp]",
              "subnet": {
                "id": "[variables('subnet')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('deploymentConfig').apiVersions.nicApiVersion]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "clientNic",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/',parameters('networkName'))]"
      ],
      "properties": {
        "primary": true,
        "enableAcceleratedNetworking": "[if(equals(parameters('acceleratedNetworking'), 'Yes'), 'true', 'false')]",
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('vmconfig').clientNicIp]",
              "subnet": {
                "id": "[variables('subnet')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "[variables('deploymentConfig').apiVersions.storageApiVersion]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "condition": "[equals(parameters('proximityPlacementGroup'), 'Yes')]",
      "apiVersion": "[variables('deploymentConfig').apiVersions.vmApiVersion]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmConfig').serverName, '-with-ppg')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/virtualNetworks/',parameters('networkName'))]",
        "[concat('Microsoft.Compute/proximityPlacementGroups/', variables('ppgName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmConfig').serverName)]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false,
            "ssh": {
            }
          },
          "customData": "[base64(variables('customData'))]"
        },
        "proximityPlacementGroup": {
          "id": "[resourceId('Microsoft.Compute/proximityPlacementGroups',variables('ppgName'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmConfig').imageInfo.imagePublisher]",
            "offer": "[variables('vmConfig').imageInfo.offer]",
            "sku": "[variables('vmConfig').imageInfo.sku]",
            "version": "[variables('vmConfig').imageInfo.version]"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": 1023,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'serverNic')]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('proximityPlacementGroup'), 'No')]",
      "apiVersion": "[variables('deploymentConfig').apiVersions.vmApiVersion]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmConfig').serverName, '-without-ppg')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/virtualNetworks/',parameters('networkName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmConfig').serverName)]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false,
            "ssh": {
            }
          },
          "customData": "[base64(variables('customData'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmConfig').imageInfo.imagePublisher]",
            "offer": "[variables('vmConfig').imageInfo.offer]",
            "sku": "[variables('vmConfig').imageInfo.sku]",
            "version": "[variables('vmConfig').imageInfo.version]"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": 1023,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'serverNic')]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('proximityPlacementGroup'), 'Yes')]",
      "apiVersion": "[variables('deploymentConfig').apiVersions.vmApiVersion]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmConfig').clientName, '-with-ppg')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/virtualNetworks/',parameters('networkName'))]",
        "[concat('Microsoft.Compute/proximityPlacementGroups/', variables('ppgName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmConfig').clientName)]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false,
            "ssh": {
            }
          },
          "customData": "[base64(variables('customData'))]"
        },
        "proximityPlacementGroup": {
          "id": "[resourceId('Microsoft.Compute/proximityPlacementGroups',variables('ppgName'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmConfig').imageInfo.imagePublisher]",
            "offer": "[variables('vmConfig').imageInfo.offer]",
            "sku": "[variables('vmConfig').imageInfo.sku]",
            "version": "[variables('vmConfig').imageInfo.version]"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": 1023,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'clientNic')]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      }
    },
{
      "condition": "[equals(parameters('proximityPlacementGroup'), 'No')]",
      "apiVersion": "[variables('deploymentConfig').apiVersions.vmApiVersion]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmConfig').clientName, '-without-ppg')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/virtualNetworks/',parameters('networkName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmConfig').clientName)]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false,
            "ssh": {
            }
          },
          "customData": "[base64(variables('customData'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmConfig').imageInfo.imagePublisher]",
            "offer": "[variables('vmConfig').imageInfo.offer]",
            "sku": "[variables('vmConfig').imageInfo.sku]",
            "version": "[variables('vmConfig').imageInfo.version]"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": 1023,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'clientNic')]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      }
    }
  ],
  "outputs": {}
}